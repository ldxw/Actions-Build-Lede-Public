#
# This is free software, lisence use MIT.
# 

name: OpenWrt-CI-ALL_IN_ONE

on:
  push:
    branches: 
      - master
#    paths-ignore:
#      - .github/workflows/openwrt-ci-aarch64.yml
#      - .github/workflows/openwrt-ci-rpi2-3-4.yml
#      - .github/workflows/openwrt-ci-rpi364.yml
#      - .github/workflows/openwrt-ci-x64.yml

jobs:

  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        db-backend: [rpi2-3-4, rpi364, aarch64, x64]

    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master
          fetch-depth: 1000000

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          # 利用挂载在 /mnt/ 的 14G 额外空间:
          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/host ./build_dir/host
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir

          df -h

      - name: Clone source code
        run:  git clone  https://github.com/coolsnowwolf/lede

      - name: Update feeds
        run: |
          echo "======================="
          echo "Lede"
          echo "======================="
          ls lede
          echo "======================="
          cd lede
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Add important app
        run: |
          git clone https://github.com/fw876/helloworld
          mv helloworld/luci-app-ssr-plus lede/package/lean

      - name: Generate configuration file
        run: |
          cp ${{ matrix.db-backend }}.defconfig lede/defconfig
          cd lede
          ls
          cat defconfig >> .config
          make defconfig
          cat .config

      - name: Make download
        run: |
          ls
          cd lede
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          ls
          cd lede
          make -j$(nproc) || make -j1 V=s
          echo "========================"
          echo "Space usage:"
          echo "========================"
          df -h
          echo "========================"
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: SCP N1-Beikeyun build files
        if: matrix.db-backend == 'aarch64'
        run: |
          echo "${{ secrets.CLOUDCONE_CENTOS_KEY }}" > Cloudcone-centos.pem
          eval `ssh-agent`
          chmod 600 Cloudcone-centos.pem
          ssh-add Cloudcone-centos.pem
          mkdir -p ~/.ssh/
          ssh-keyscan lassrv4.muyeyifeng.space >> ~/.ssh/known_hosts
          ssh -T root@lassrv4.muyeyifeng.space
          scp -i Cloudcone-centos.pem root@lassrv4.muyeyifeng.space:/root/mk_openwrt.tar.gz ./

      - name: Decompression and move files
        if: matrix.db-backend == 'aarch64'
        run: |     
          tar zxvf mk_openwrt.tar.gz
          ls
          sudo mkdir /opt/imgs
          sudo mv openwrt/*.img /opt/imgs/

      - name: Build N1_OPIMG Beikeyun_OPIMG
        if: matrix.db-backend == 'aarch64'
        run: |
          mv ./lede/bin/targets/armvirt/64/openwrt-armvirt-64-default-rootfs.tar.gz ./openwrt
          cd openwrt
          sudo ./mk_n1_opimg.sh
          sudo ./mk_beikeyun_opimg.sh

      - name: Upload artifact aarch64
        if: matrix.db-backend == 'aarch64'
        uses: actions/upload-artifact@master
        with:
          name: OPENWRT-${{ matrix.db-backend }}
          path: ./openwrt/tmp/

      - name: Upload artifact rpi234_32bit rpi3_64bit x86_64
        if: matrix.db-backend != 'aarch64'
        uses: actions/upload-artifact@master
        with:
          name: OPENWRT-${{ matrix.db-backend }}
          path: ./lede/bin/targets/
